---
import SiteOptions from "../site.config.mjs";
import { Image } from "astro:assets";
export interface Props {
  showTitle?: boolean;
}

const { showTitle = true } = Astro.props;
---

<header class="mb-4 relative z-50">
  <!-- Header Top -->
  <div class="relative px-4 mt-2 flex items-center justify-center sm:justify-start lg:justify-between lg:px-0">
    <!-- Hamburger (mobile only) -->
    <button
      id="hamburger"
      class="absolute left-4 p-2 sm:static sm:mr-4 lg:hidden"
      onclick="toggleMobileMenu()"
      aria-label="Open menu"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800 dark:text-gray-100" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>

    <!-- Logo + Title/Subitle -->
<!-- Logo + Title/Subtitle -->
<div class="flex flex-col sm:flex-row items-center sm:items-center text-center sm:text-left mx-auto sm:mx-0">
  <a href="/" class="flex items-center space-x-4 mt-2 md:mt-8">
    <Image
      src="/images/logo02.png"
      alt="Logo"
      width={96}
      height={96}
      loading="eager"
      class="w-12 h-12 md:w-24 md:h-24 rounded-full object-cover border border-gray-200 dark:border-gray-700 shadow hover:opacity-80 transition-opacity"
    />
    {
      showTitle && (
        <div class="mt-2 md:mt-0">
          <h1 class="text-lg md:text-4xl font-bold tracking-tight hover:opacity-80 transition-opacity">
            {SiteOptions.siteTitle}
          </h1>
          <p class="hidden sm:block text-sm md:text-lg text-gray-900 dark:text-gray-400 font-light mb-2 md:mb-0 max-w-[580px] md:max-w-none" set:html={SiteOptions.siteSubTitle} />
        </div>
      )
    }
  </a>
</div>


    <!-- Dark Mode Toggle (mobile only) -->
    <button
      onclick="toggleTheme()"
      aria-label="Toggle theme"
      class="absolute right-4 p-2 sm:static sm:ml-auto rounded-md text-gray-600 dark:text-gray-300 bg-gray-100 dark:bg-slate-700 hover:bg-gray-200 dark:hover:bg-slate-600 transition-colors lg:hidden"
    >
        <svg id="sun-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 hidden">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" />
      </svg>
      <svg id="moon-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 hidden">
        <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.72 9.72 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998Z" />
      </svg>
    </button>

    <!-- Dark Mode Toggle (desktop only) -->
    <div class="hidden lg:block absolute top-2 right-4">
      <button
        onclick="toggleTheme()"
        aria-label="Toggle theme"
        class="p-2 rounded-md text-gray-600 dark:text-gray-300 bg-gray-100 dark:bg-slate-700 hover:bg-gray-200 dark:hover:bg-slate-600 transition-colors"
      >
        <svg id="sun-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 hidden">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" />
      </svg>
      <svg id="moon-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 hidden">
        <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.72 9.72 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998Z" />
      </svg>
      </button>
    </div>
  </div>

  <!-- Navigation Links -->
  <!-- ... your existing nav here (unchanged) ... -->

  <script is:inline>
    const nav = document.getElementById("nav-links")
    const dropdown = document.getElementById("platformDropdown")
    const searchInput = document.getElementById("global-search-input")
    const searchBtn = document.getElementById("global-search-btn")

    function toggleMobileMenu() {
      nav?.classList.toggle("hidden")
    }

    function toggleDropdown() {
      dropdown.classList.toggle("scale-y-100")
      dropdown.classList.toggle("opacity-100")
      dropdown.classList.toggle("scale-y-0")
      dropdown.classList.toggle("opacity-0")
      dropdown.classList.toggle("pointer-events-none")
    }

    function toggleTheme() {
      const current = localStorage.getItem("theme")
      const next = current === "dark" ? "light" : "dark"
      localStorage.setItem("theme", next)
      document.documentElement.classList.toggle("dark", next === "dark")
      updateThemeIcons()
    }

    function updateThemeIcons() {
      const isDark = document.documentElement.classList.contains("dark")

      document.querySelectorAll("#sun-icon, #sun-icon-mobile").forEach((el) => {
        el.classList.toggle("hidden", !isDark)
      })

      document.querySelectorAll("#moon-icon, #moon-icon-mobile").forEach((el) => {
        el.classList.toggle("hidden", isDark)
      })
    }

    updateThemeIcons()

    document.addEventListener("click", (e) => {
      if (!document.getElementById("platformToggle")?.contains(e.target) && !dropdown?.contains(e.target)) {
        dropdown.classList.remove("scale-y-100", "opacity-100")
        dropdown.classList.add("scale-y-0", "opacity-0", "pointer-events-none")
      }
    })

    searchInput?.addEventListener("keydown", (e) => {
      if (e.key === "Enter") {
        e.preventDefault()
        const q = encodeURIComponent(searchInput.value.trim())
        if (q) window.location.href = `/search?q=${q}`
      }
    })

    searchBtn?.addEventListener("click", () => {
      const q = encodeURIComponent(searchInput.value.trim())
      if (q) window.location.href = `/search?q=${q}`
    })
  </script>
</header>
