---
// File: src/pages/article/legacy/[slug].astro

import { type CollectionEntry, getCollection, getEntryBySlug } from "astro:content";
import BlogLayout   from "../../../layouts/BlogLayout.astro";
import Header       from "../../../components/Header.astro";
import Footer       from "../../../components/Footer.astro";
import FeaturedCard from "../../../components/FeaturedCard.astro";
import Carousel     from "../../../components/Carousel.astro";
import SiteOptions  from "../../../site.config.mjs";

// 1) Only include posts whose slug starts with "legacy/"
export async function getStaticPaths() {
  const posts = await getCollection("article");
  return posts
    .filter((p) => p.slug.startsWith("legacy/"))
    .map((p) => {
      // p.slug is like "legacy/2024-07-26-…"
      const [, postSlug] = p.slug.split("/");
      return { params: { slug: postSlug } };
    });
}

// 2) Inside the page, fetch via the full legacy path
const slug     = Astro.params.slug as string;              // "2024-07-26-…"
const fullSlug = `legacy/${slug}`;                         // "legacy/2024-07-26-…"
const post     = await getEntryBySlug("article", fullSlug) as CollectionEntry<"article">;
if (!post) throw Astro.error(404, `Legacy article not found: ${fullSlug}`);

// Destructure frontmatter + renderable
const {
  title, pubDate, category, description,
  thumb, author, tags, large, score, gallery
} = post.data;
const { Content } = await post.render();

// “You might also like”: pick 3 random featured posts (excluding current)
const allPosts = await getCollection("article");
const featuredPosts = allPosts
  // 1) Exclude current
  .filter((p) => p.slug !== post.slug)
  // 2) Only those marked featured in frontmatter
  .filter((p) => p.data.featured === true)
  // 3) Shuffle order
  .sort(() => Math.random() - 0.5)
  // 4) Take first 3
  .slice(0, 3);

// Format date
const formattedDate = new Intl.DateTimeFormat("en-US", {
  year: "numeric", month: "long", day: "numeric",
}).format(pubDate);
---

<BlogLayout title={title} description={description}>
  <Header showTitle />

  <article class="relative mt-8">

    {gallery?.length > 0 && (
      <div class="float-right w-full max-w-[420px] ml-8 mb-4">
        <Carousel images={gallery} />
      </div>
    )}

    <div class="flex items-start gap-4 mb-4">
      {score && (
        <div class="shrink-0">
          <div class="article-score-badge beside-title">
            <span class="article-score-value">{score}</span>
            <span class="article-score-label">Score</span>
          </div>
        </div>
      )}
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-slate-100 leading-tight">
        {title}
      </h1>
    </div>

    <div class="text-sm text-gray-500 dark:text-gray-400 mb-4">
      {formattedDate} • {author} • Category: {category}
      <div class="mt-2">
        Tags:
        {tags.map((tag) => (
          <a
            href={`/tag/${tag.toLowerCase().replace(/\s+/g, "-")}`}
            class="bg-gray-100 text-gray-600 dark:bg-slate-700 dark:text-slate-300 px-2 py-1 rounded ml-1 no-underline hover:underline"
          >
            {tag}
          </a>
        ))}
      </div>
    </div>

    {large && (
      <div class="mb-8 clear-both">
        <img src={large} alt={title} class="w-full h-auto rounded-lg shadow-md" />
      </div>
    )}

    <div class="prose prose-lg max-w-none text-gray-700 dark:text-gray-300">
      <Content />
    </div>
  </article>

  {SiteOptions.showSimilarPosts && featuredPosts.length > 0 && (
    <>
      <hr class="border-t border-gray-200 dark:border-gray-700 my-12" />
      <section>
        <h2 class="text-2xl font-semibold mb-8 text-center text-gray-800 dark:text-slate-200">
          {SiteOptions.labels.youMightAlsoLike}
        </h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
          {featuredPosts.map((p) => <FeaturedCard post={p} />)}
        </div>
      </section>
    </>
  )}

  <Footer />
</BlogLayout>
