---
import { getCollection } from "astro:content"
import BlogLayout from "../../layouts/BlogLayout.astro"
import Header from "../../components/Header.astro"
import Footer from "../../components/Footer.astro"
import PostCard from "../../components/PostCard.astro"
import Pagination from "../../components/Pagination.astro"
import SiteOptions from "../../site.config.mjs"

const POSTS_PER_PAGE = SiteOptions.postsPerPage ?? 10

// ✅ Required for dynamic route generation
export async function getStaticPaths() {
  const allPosts = await getCollection("article")
  const allCategories = [...new Set(
    allPosts.map(post => post.data.category?.toLowerCase().replace(/\s+/g, "-")).filter(Boolean)
  )]

  return allCategories.map(category => ({
    params: { category }
  }))
}

// ✅ Runtime logic
const { category } = Astro.params
const allPosts = await getCollection("article")

const posts = allPosts.filter(post =>
  post.data.category?.toLowerCase().replace(/\s+/g, "-") === category
).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())

const totalPages = Math.ceil(posts.length / POSTS_PER_PAGE)
const paginated = posts.slice(0, POSTS_PER_PAGE)

const pageData = {
  data: paginated,
  url: {
    current: `/category/${category}`,
    prev: undefined,
    next: totalPages > 1 ? `/category/${category}/page/2` : undefined,
  },
  currentPage: 1,
  lastPage: totalPages,
  size: POSTS_PER_PAGE,
  total: posts.length,
}
---

<BlogLayout title={`Category: ${category}`}>
  <Header showTitle={true} />
  <h1 class="text-3xl font-bold mb-8 text-center capitalize">Category: {category.replace(/-/g, " ")}</h1>

  <ul class="space-y-4">
    {paginated.map(post => <PostCard post={post} />)}
  </ul>

  <Pagination page={pageData} />
  <Footer />
</BlogLayout>
