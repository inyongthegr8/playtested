---
// Determine config file based on environment
const configUrl = import.meta.env.DEV ? "/config.local.yml" : "/config.yml";
---
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="noindex" />
    <title>Content Manager</title>
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  </head>
  <body>
    <!-- Decap CMS Script - using a more stable version -->
    <script src="https://unpkg.com/decap-cms@3.3.3/dist/decap-cms.js"></script>
    
    <!-- Custom preview templates -->
    <script src="/admin/index.js" type="module"></script>
    
    <!-- Debug and Initialize -->
    <script>
      console.log('Admin page loaded');
      console.log('Environment:', {
        configUrl: '{configUrl}',
        currentUrl: window.location.href
      });
      
      // Debug OAuth messages
      window.addEventListener('message', function(event) {
        console.log('üîç Message received:', event.data);
        
        // Log authorization messages specifically
        if (event.data && typeof event.data === 'object' && event.data.type) {
          if (event.data.type.includes('authorization:github')) {
            console.log('‚úÖ GitHub OAuth message:', event.data);
          }
        } else if (typeof event.data === 'string' && event.data.includes('authorization:github')) {
          console.log('‚úÖ GitHub OAuth string message:', event.data);
        }
      });
      
      // Simple CMS initialization
      window.addEventListener('load', function() {
        console.log('üöÄ Window loaded, initializing CMS...');
        
        if (window.CMS) {
          try {
            // Simple initialization
            window.CMS.init({
              config: {
                load_config_file: true
              }
            });
            console.log('‚úÖ CMS initialization started');
          } catch (error) {
            console.error('‚ùå CMS initialization error:', error);
            
            // Fallback - try without explicit config
            try {
              window.CMS.init();
              console.log('‚úÖ CMS fallback initialization started');
            } catch (fallbackError) {
              console.error('‚ùå CMS fallback failed:', fallbackError);
            }
          }
        } else {
          console.error('‚ùå CMS not available');
        }
      });
    </script>
  </body>
</html>